{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///meiosis.min.js","webpack:///webpack/bootstrap 3717e92cb0babf5b53c7","webpack:///./src/meiosis.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","applyModelChange","model","modelChange","isMeiosisTracerOn","window","trace","params","modelChanges","dataStreams","Error","copy_1","copy","JSON","parse","stringify","bufferedValues_1","bufferedStreamValues_1","devtoolInitialized_1","sendValues_1","liveChange_1","Date","lastChange_1","map","lastStream","length","otherStreamIds_1","otherStreamsById_1","otherStreams","forEach","otherStream","streamId","getTime","push","data","type","postMessage","addEventListener","evt","sendValuesBack","streamIds","values","update","stream","createEventsFor","eventStream","events","top","createEventFor","section","created","prefix","keys","key","emit_1","eventName","fn","callback","event","createEvents","createdEvents","connect","listener"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,QAAAD,IAEAD,EAAA,QAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAE,EAAAF,EACAG,GAAA,EACAV,WAUA,OANAK,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,GAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KA+DA,OAnCAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAG,EAAA,SAAAK,GAA2C,MAAAA,IAG3CR,EAAAS,EAAA,SAAAf,EAAAgB,EAAAC,GACAX,EAAAY,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAvB,GACA,GAAAgB,GAAAhB,KAAAwB,WACA,WAA2B,MAAAxB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAK,GAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDrB,EAAAwB,EAAA,GAGAxB,IAAAyB,EAAA,KDgBM,SAAU9B,EAAQD,EAASM,GAEjC,YEvCA,SAAA0B,GAAoCC,EAAUC,GAC5C,MAAOA,GAAYD,GAuErB,QAAAE,KACE,MAAOC,SAAUA,OAAuC,+BAG1D,QAAAC,GAAyBC,GACvB,IAAKA,EAAOC,eAAiBD,EAAOE,YAClC,KAAM,IAAIC,OAAM,+DAsClB,IAAIN,IAAqB,CACvB,GAAMO,GAAYJ,EAAOK,MAAQ,SAAEV,GAAa,MAAAW,MAAKC,MAAMD,KAAKE,UAAUb,KACpEc,KACAC,KACFC,GAA8B,EAC9BC,GAAsB,EAEtBC,EAAmB,GAAIC,MACvBC,EAAmBF,CACvBb,GAAOC,aAAae,IAAI,WAAM,MAAAH,GAAa,GAAIC,OAE/C,IAAMG,GAAajB,EAAOE,YAAYF,EAAOE,YAAYgB,OAAS,GAE9DC,KACAC,IAEApB,GAAOqB,cAAgBrB,EAAOqB,aAAaH,QAC7ClB,EAAOqB,aAAaC,QAAQ,SAAAC,GAC1B,GAAMC,GAAmB,WAAY,GAAIV,OAAOW,SAChDN,GAAeO,KAAKF,GACpBJ,EAAiBI,GAAYD,EAE7BA,EAAYP,IAAI,SAAAxC,GACd,GAAMmD,IAAcC,KAAM,uBAAwBpD,MAAKA,EAAEgD,SAAQA,EAE7Db,GACFb,OAAO+B,YAAYF,EAAM,KAGzBjB,EAAqBgB,KAAKC,OAMlC7B,OAAOgC,iBAAiB,UAAW,SAAAC,GACjC,GAAsB,yBAAlBA,EAAIJ,KAAKC,KACXhB,EAAamB,EAAIJ,KAAKK,eACtBhC,EAAOE,YAAY,GAAG6B,EAAIJ,KAAKhC,WAE5B,IAAsB,wBAAlBoC,EAAIJ,KAAKC,KAChBjB,GAAqB,EAEjBQ,EAAeD,OAAS,GAC1BpB,OAAO+B,aAAcD,KAAM,qBAAsBK,UAAWd,GAAkB,KAEhFV,EAAea,QAAQ,SAAAY,GAAU,MAAApC,QAAO+B,aAAcD,KAAM,iBAAkBM,OAAMA,EAAEC,QAAQ,GAAQ,OACtGzB,EAAqBY,QAAQ,SAAAK,GAAQ,MAAA7B,QAAO+B,YAAYF,EAAM,WAE3D,IAAsB,iCAAlBI,EAAIJ,KAAKC,KAAyC,CACzD,GAAMJ,GAAmBO,EAAIJ,KAAKH,SAC5BhD,EAAauD,EAAIJ,KAAKnD,KAE5B4C,GAAiBI,GAAUhD,MAI/ByC,EAAWD,IAAI,WACb,GAAMmB,GAAkBtB,IAAeE,CAGvC,IAFAA,EAAaF,EAETD,GAAcuB,EAAQ,CACxB,GAAMD,GAAqBlC,EAAOE,YAAYc,IAAI,SAACoB,GACjD,OAAG5D,MAAO4B,EAAKgC,OAEbzB,GACFb,OAAO+B,aAAcD,KAAM,iBAAkBM,OAAMA,EAAEC,OAAMA,GAAI,KAG/D1B,EAAeiB,KAAKQ,OFhJ9BrD,OAAOC,eAAepB,EAAS,cAAgBc,OAAO,IEzCtDd,EAAAgC,kBAIA,IAAM2C,GAAkB,SAACC,EAAgCC,EAAaC,GAEpE,MADAC,GAAeH,EAAaC,EAAQC,EAAKA,EAAK,IACvCA,GAGHC,EAAiB,SAACH,EAAgCI,EACpDF,EAAUG,EAAcC,GA6C1B,MA3CA/D,QAAOgE,KAAKH,GAASpB,QAAQ,SAAAwB,GAC3B,GAAIJ,EAAQI,GAAK5B,OAAQ,CACvB,GAAI6B,GAAgB,IAEpB,IAAY,SAARD,EACFC,GAAO,MAEJ,IAAY,WAARD,EAIP,KAAM,IAAI3C,OAAM,6CAHhB4C,IAAO,EAMTL,EAAQI,GAAKxB,QAAQ,SAAC0B,GACpB,GAAMpB,GAAOgB,EAASI,EAElBC,EAAU,IAEVF,IACFE,EAAK,SAACtB,GAAc,MAAAW,IAAcV,KAAIA,EAAED,KAAIA,KAE5CsB,EAAGjC,IAAM,SAACkC,GAAuB,MAAAZ,GAAYtB,IAAI,SAACmC,GAC5CA,EAAMvB,OAASA,GACjBsB,EAASC,EAAMxB,WAKnBsB,EAAK,SAACtB,GAAc,MAAAsB,GAAGC,UAAYD,EAAGC,SAASvB,IAC/CsB,EAAGjC,IAAM,SAACkC,GAAuB,MAAAD,GAAGC,SAAWA,IAGjDP,EAAQK,GAAaC,EACrBT,EAAIZ,GAAQqB,QAIdN,GAAQG,MACRL,EAAeH,EAAaI,EAAQI,GAAMN,EAAKG,EAAQG,GAAMF,EAASE,EAAM,OAIzEH,EAGIjF,GAAA0F,aAAe,SAACpD,GAC3B,GAAMqD,GAAgBhB,EAAgBrC,EAAOsC,YAAatC,EAAOuC,UAUjE,OARIvC,GAAOsD,SACTzE,OAAOgE,KAAK7C,EAAOsD,SAAShC,QAAQ,SAAAM,GAClC,MAAA5B,GAAOsD,QAAQ1B,GAAMN,QAAQ,SAACiC,GAC5B,MAAAF,GAAczB,GAAMZ,IAAI,SAACW,GAAc,MAAA0B,GAAcE,GAAU5B,SAK9D0B,GAGT3F,EAAAmC,oBAIAnC,EAAAqC,SFsGM,SAAUpC,EAAQD,EAASM,GAEjC,YAKAa,QAAOC,eAAepB,EAAS,cAAgBc,OAAO,IAHtD,SAAkBF,GACd,IAAK,GAAIkB,KAAKlB,GAAQZ,EAAQ6B,eAAeC,KAAI9B,EAAQ8B,GAAKlB,EAAEkB,KGlOpExB,EAAA","file":"meiosis.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosis\"] = factory();\n\telse\n\t\troot[\"meiosis\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosis\"] = factory();\n\telse\n\t\troot[\"meiosis\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction applyModelChange(model, modelChange) {\n    return modelChange(model);\n}\nexports.applyModelChange = applyModelChange;\nvar createEventsFor = function (eventStream, events, top) {\n    createEventFor(eventStream, events, top, top, \"\");\n    return top;\n};\nvar createEventFor = function (eventStream, section, top, created, prefix) {\n    Object.keys(section).forEach(function (key) {\n        if (section[key].length) {\n            var emit_1 = null;\n            if (key === \"emit\") {\n                emit_1 = true;\n            }\n            else if (key === \"listen\") {\n                emit_1 = false;\n            }\n            else {\n                throw new Error(\"key for events must be 'emit' or 'listen'.\");\n            }\n            section[key].forEach(function (eventName) {\n                var type = prefix + eventName;\n                var fn = null;\n                if (emit_1) {\n                    fn = function (data) { return eventStream({ type: type, data: data }); };\n                    fn.map = function (callback) { return eventStream.map(function (event) {\n                        if (event.type === type) {\n                            callback(event.data);\n                        }\n                    }); };\n                }\n                else {\n                    fn = function (data) { return fn.callback && fn.callback(data); };\n                    fn.map = function (callback) { return fn.callback = callback; };\n                }\n                created[eventName] = fn;\n                top[type] = fn;\n            });\n        }\n        else {\n            created[key] = {};\n            createEventFor(eventStream, section[key], top, created[key], prefix + key + \".\");\n        }\n    });\n    return created;\n};\nexports.createEvents = function (params) {\n    var createdEvents = createEventsFor(params.eventStream, params.events, {});\n    if (params.connect) {\n        Object.keys(params.connect).forEach(function (type) {\n            return params.connect[type].forEach(function (listener) {\n                return createdEvents[type].map(function (data) { return createdEvents[listener](data); });\n            });\n        });\n    }\n    return createdEvents;\n};\nfunction isMeiosisTracerOn() {\n    return window && window[\"__MEIOSIS_TRACER_GLOBAL_HOOK__\"];\n}\nexports.isMeiosisTracerOn = isMeiosisTracerOn;\nfunction trace(params) {\n    if (!params.modelChanges || !params.dataStreams) {\n        throw new Error(\"Please specify streamLibrary, modelChanges, and dataStreams.\");\n    }\n    if (isMeiosisTracerOn()) {\n        var copy_1 = params.copy || (function (model) { return JSON.parse(JSON.stringify(model)); });\n        var bufferedValues_1 = [];\n        var bufferedStreamValues_1 = [];\n        var devtoolInitialized_1 = false;\n        var sendValues_1 = true;\n        var liveChange_1 = new Date();\n        var lastChange_1 = liveChange_1;\n        params.modelChanges.map(function () { return liveChange_1 = new Date(); });\n        var lastStream = params.dataStreams[params.dataStreams.length - 1];\n        var otherStreamIds_1 = [];\n        var otherStreamsById_1 = {};\n        if (params.otherStreams && params.otherStreams.length) {\n            params.otherStreams.forEach(function (otherStream) {\n                var streamId = \"stream_\" + new Date().getTime();\n                otherStreamIds_1.push(streamId);\n                otherStreamsById_1[streamId] = otherStream;\n                otherStream.map(function (value) {\n                    var data = { type: \"MEIOSIS_STREAM_VALUE\", value: value, streamId: streamId };\n                    if (devtoolInitialized_1) {\n                        window.postMessage(data, \"*\");\n                    }\n                    else {\n                        bufferedStreamValues_1.push(data);\n                    }\n                });\n            });\n        }\n        window.addEventListener(\"message\", function (evt) {\n            if (evt.data.type === \"MEIOSIS_RENDER_MODEL\") {\n                sendValues_1 = evt.data.sendValuesBack;\n                params.dataStreams[0](evt.data.model);\n            }\n            else if (evt.data.type === \"MEIOSIS_TRACER_INIT\") {\n                devtoolInitialized_1 = true;\n                if (otherStreamIds_1.length > 0) {\n                    window.postMessage({ type: \"MEIOSIS_STREAM_IDS\", streamIds: otherStreamIds_1 }, \"*\");\n                }\n                bufferedValues_1.forEach(function (values) { return window.postMessage({ type: \"MEIOSIS_VALUES\", values: values, update: true }, \"*\"); });\n                bufferedStreamValues_1.forEach(function (data) { return window.postMessage(data, \"*\"); });\n            }\n            else if (evt.data.type === \"MEIOSIS_TRIGGER_STREAM_VALUE\") {\n                var streamId = evt.data.streamId;\n                var value = evt.data.value;\n                otherStreamsById_1[streamId](value);\n            }\n        });\n        lastStream.map(function () {\n            var update = liveChange_1 !== lastChange_1;\n            lastChange_1 = liveChange_1;\n            if (sendValues_1 || update) {\n                var values = params.dataStreams.map(function (stream) {\n                    return ({ value: copy_1(stream()) });\n                });\n                if (devtoolInitialized_1) {\n                    window.postMessage({ type: \"MEIOSIS_VALUES\", values: values, update: update }, \"*\");\n                }\n                else {\n                    bufferedValues_1.push(values);\n                }\n            }\n        });\n    }\n}\nexports.trace = trace;\n;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(0));\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// meiosis.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3717e92cb0babf5b53c7","export interface Mapper<A, B> {\n  (value: A): B;\n}\n\nexport interface Stream<T> {\n  /**\n   * Gets the current value of the stream.\n   */\n  (): T;\n\n  /**\n   * Sets a new value on the stream.\n   */\n  (value: T): Stream<T>;\n\n  /**\n   * Maps over a stream.\n   */\n  map<T, R>(mapper: Mapper<T, R>): Stream<R>;\n}\n\nexport interface Scanner<A, B> {\n  (acc: A, next: B): A;\n}\n\nexport interface TraceParameters<M> {\n  modelChanges: Stream<any>;\n  dataStreams: Array<Stream<any>>;\n  otherStreams?: Array<Stream<any>>;\n  copy?: Function;\n}\n\nexport interface EventType {\n  type: string;\n  data: any;\n}\n\nexport interface CreateEvents {\n  eventStream: Stream<EventType>;\n  events: any;\n  connect?: any;\n}\n\nexport function applyModelChange<M>(model: M, modelChange: Function) {\n  return modelChange(model);\n}\n\nconst createEventsFor = (eventStream: Stream<EventType>, events: any, top: any) => {\n  createEventFor(eventStream, events, top, top, \"\");\n  return top;\n};\n\nconst createEventFor = (eventStream: Stream<EventType>, section: any,\n    top: any, created: any, prefix: string) =>\n{\n  Object.keys(section).forEach(key => {\n    if (section[key].length) {\n      let emit: boolean = null;\n\n      if (key === \"emit\") {\n        emit = true;\n      }\n      else if (key === \"listen\") {\n        emit = false;\n      }\n      else {\n        throw new Error(\"key for events must be 'emit' or 'listen'.\");\n      }\n\n      section[key].forEach((eventName: string) => {\n        const type = prefix + eventName;\n\n        let fn: any = null;\n\n        if (emit) {\n          fn = (data: any) => eventStream({ type, data });\n\n          fn.map = (callback: Function) => eventStream.map((event: EventType) => {\n            if (event.type === type) {\n              callback(event.data);\n            }\n          });\n        }\n        else {\n          fn = (data: any) => fn.callback && fn.callback(data);\n          fn.map = (callback: Function) => fn.callback = callback;\n        }\n\n        created[eventName] = fn;\n        top[type] = fn;\n      });\n    }\n    else {\n      created[key] = {};\n      createEventFor(eventStream, section[key], top, created[key], prefix + key + \".\");\n    }\n  });\n\n  return created;\n};\n\nexport const createEvents = (params: CreateEvents) => {\n  const createdEvents = createEventsFor(params.eventStream, params.events, {});\n\n  if (params.connect) {\n    Object.keys(params.connect).forEach(type =>\n      params.connect[type].forEach((listener: string) =>\n        createdEvents[type].map((data: any) => createdEvents[listener](data))\n      )\n    );\n  }\n\n  return createdEvents;\n};\n\nexport function isMeiosisTracerOn(): boolean {\n  return window && window[\"__MEIOSIS_TRACER_GLOBAL_HOOK__\"];\n}\n\nexport function trace<M>(params: TraceParameters<M>): void {\n  if (!params.modelChanges || !params.dataStreams) {\n    throw new Error(\"Please specify streamLibrary, modelChanges, and dataStreams.\");\n  }\n\n  /*\n  Any change to lastStream automatically re-renders the view.\n\n  \"Live\" changes are changes to the modelChanges stream.\n\n  Keep track of the date of the last live change with the liveChange date.\n\n  1. Live change\n  - update the liveChange date\n  - since liveChange !== lastChange, update=true\n  - set lastChange = liveChange\n  - send values to tracer with update=true. This will add to the tracer's history\n    and increase the slider max.\n\n  2. Time-travel change\n  - receive MEIOSIS_RENDER_MODEL with sendValuesBack=false\n  - send the data to the first stream, which then goes thru all streams\n  - the view automatically re-renders\n  - since liveChange === lastChange, update=false\n  - don't send anything back to the tracer.\n\n  3. Typing in model textarea\n  - receive MEIOSIS_RENDER_MODEL with sendValuesBack=true. The tracer needs to be\n    sent the computed values from the other streams.\n  - send the data to the first stream, which then goes thru all streams\n  - the view automatically re-renders\n  - since liveChange === lastChange, update=false\n  - since sendValuesBack=true, send the values to the tracer. But, update=false so\n    this will not add to the tracer's history.\n\n  4. Changes in otherStreams\n  - initially send the ids of the streams\n  - send new values with ids\n  */\n\n  if (isMeiosisTracerOn()) {\n    const copy: any = params.copy || ((model: M) => JSON.parse(JSON.stringify(model)));\n    const bufferedValues: Array<any> = [];\n    const bufferedStreamValues: Array<any> = [];\n    let devtoolInitialized: boolean = false;\n    let sendValues: boolean = true;\n\n    let liveChange: Date = new Date();\n    let lastChange: Date = liveChange;\n    params.modelChanges.map(() => liveChange = new Date());\n\n    const lastStream = params.dataStreams[params.dataStreams.length - 1];\n\n    let otherStreamIds: Array<string> = [];\n    let otherStreamsById: any = {};\n\n    if (params.otherStreams && params.otherStreams.length) {\n      params.otherStreams.forEach(otherStream => {\n        const streamId: string = \"stream_\" + new Date().getTime();\n        otherStreamIds.push(streamId);\n        otherStreamsById[streamId] = otherStream;\n\n        otherStream.map(value => {\n          const data: any = { type: \"MEIOSIS_STREAM_VALUE\", value, streamId };\n\n          if (devtoolInitialized) {\n            window.postMessage(data, \"*\");\n          }\n          else {\n            bufferedStreamValues.push(data);\n          }\n        });\n      });\n    }\n\n    window.addEventListener(\"message\", evt => {\n      if (evt.data.type === \"MEIOSIS_RENDER_MODEL\") {\n        sendValues = evt.data.sendValuesBack;\n        params.dataStreams[0](evt.data.model);\n      }\n      else if (evt.data.type === \"MEIOSIS_TRACER_INIT\") {\n        devtoolInitialized = true;\n\n        if (otherStreamIds.length > 0) {\n          window.postMessage({ type: \"MEIOSIS_STREAM_IDS\", streamIds: otherStreamIds }, \"*\");\n        }\n        bufferedValues.forEach(values => window.postMessage({ type: \"MEIOSIS_VALUES\", values, update: true }, \"*\"));\n        bufferedStreamValues.forEach(data => window.postMessage(data, \"*\"));\n      }\n      else if (evt.data.type === \"MEIOSIS_TRIGGER_STREAM_VALUE\") {\n        const streamId: string = evt.data.streamId;\n        const value: any = evt.data.value;\n\n        otherStreamsById[streamId](value);\n      }\n    });\n\n    lastStream.map(() => {\n      const update: boolean = liveChange !== lastChange;\n      lastChange = liveChange;\n\n      if (sendValues || update) {\n        const values: Array<any> = params.dataStreams.map((stream: Stream<any>) =>\n          ({ value: copy(stream()) }));\n\n        if (devtoolInitialized) {\n          window.postMessage({ type: \"MEIOSIS_VALUES\", values, update }, \"*\");\n        }\n        else {\n          bufferedValues.push(values);\n        }\n      }\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/meiosis.ts","export * from \"./meiosis\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}
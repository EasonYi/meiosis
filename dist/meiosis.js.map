{"version":3,"sources":["webpack://meiosis/webpack/universalModuleDefinition","webpack://meiosis/webpack/bootstrap","webpack://meiosis/./src/index.ts","webpack://meiosis/./src/meiosis.ts"],"names":[],"mappings":"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","file":"meiosis.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosis\"] = factory();\n\telse\n\t\troot[\"meiosis\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export * from \"./meiosis\";\n","export interface Mapper<A, B> {\n  (value: A): B;\n}\n\nexport interface Stream<T> {\n  /**\n   * Gets the latest value from the stream.\n   */\n  (): T;\n\n  /**\n   * Pushes a new value onto the stream.\n   */\n  (value: T): Stream<T>;\n\n  /**\n   * Maps over a stream.\n   */\n  map<T, R>(mapper: Mapper<T, R>): Stream<R>;\n}\n\nexport interface TraceParameters<M> {\n  update: Stream<any>;\n  dataStreams: Array<Stream<any>>;\n  otherStreams?: Array<Stream<any>>;\n  toJS?: Function;\n  fromJS?: Function;\n  toUpdate?: Function;\n}\n\nexport function isMeiosisTracerOn(): boolean {\n  return window && window[\"__MEIOSIS_TRACER_GLOBAL_HOOK__\"];\n}\n\nexport function trace<M>(params: TraceParameters<M>): void {\n  if (!params.update || !params.dataStreams) {\n    throw new Error(\"Please specify update and dataStreams.\");\n  }\n\n  /*\n  Any change to lastStream automatically re-renders the view.\n\n  \"Live\" changes are changes to the update stream.\n\n  Keep track of the date of the last live change with the liveChange date.\n\n  1. Live change\n  - update the liveChange date\n  - since liveChange !== lastChange, update=true\n  - set lastChange = liveChange\n  - send values to tracer with update=true. This will add to the tracer's history\n    and increase the slider max.\n\n  2. Time-travel change\n  - receive MEIOSIS_RENDER_MODEL with sendValuesBack=false\n  - send the data to the first stream, which then goes thru all streams\n  - the view automatically re-renders\n  - since liveChange === lastChange, update=false\n  - don't send anything back to the tracer.\n\n  3. Typing in model textarea\n  - receive MEIOSIS_RENDER_MODEL with sendValuesBack=true. The tracer needs to be\n    sent the computed values from the other streams.\n  - send the data to the first stream, which then goes thru all streams\n  - the view automatically re-renders\n  - since liveChange === lastChange, update=false\n  - since sendValuesBack=true, send the values to the tracer. But, update=false so\n    this will not add to the tracer's history.\n\n  4. Changes in otherStreams\n  - initially send the ids of the streams\n  - send new values with ids\n  */\n\n  if (isMeiosisTracerOn()) {\n    const toJS: Function = params.toJS || ((model: M) => JSON.parse(JSON.stringify(model)));\n    const fromJS: Function = params.fromJS || ((model: M) => model);\n    const toUpdate: Function = params.toUpdate || ((model: any) => () => model);\n    const bufferedValues: Array<any> = [];\n    const bufferedStreamValues: Array<any> = [];\n    let devtoolInitialized: boolean = false;\n    let sendValues: boolean = true;\n\n    let liveChange = true;\n\n    const lastStream = params.dataStreams[params.dataStreams.length - 1];\n\n    let otherStreamIds: Array<string> = [];\n    let otherStreamsById: any = {};\n\n    if (params.otherStreams && params.otherStreams.length) {\n      params.otherStreams.forEach(otherStream => {\n        const streamId: string = \"stream_\" + new Date().getTime();\n        otherStreamIds.push(streamId);\n        otherStreamsById[streamId] = otherStream;\n\n        otherStream.map(value => {\n          const data: any = { type: \"MEIOSIS_STREAM_VALUE\", value, streamId };\n\n          if (devtoolInitialized) {\n            window.postMessage(data, \"*\");\n          }\n          else {\n            bufferedStreamValues.push(data);\n          }\n        });\n      });\n    }\n\n    window.addEventListener(\"message\", evt => {\n      if (evt.data.type === \"MEIOSIS_RENDER_MODEL\") {\n        sendValues = evt.data.sendValuesBack;\n        liveChange = false;\n        params.update(toUpdate(fromJS(evt.data.model)));\n      }\n      else if (evt.data.type === \"MEIOSIS_TRACER_INIT\") {\n        devtoolInitialized = true;\n\n        if (otherStreamIds.length > 0) {\n          window.postMessage({ type: \"MEIOSIS_STREAM_IDS\", streamIds: otherStreamIds }, \"*\");\n        }\n        bufferedValues.forEach(values => window.postMessage({ type: \"MEIOSIS_VALUES\", values, update: true }, \"*\"));\n        bufferedStreamValues.forEach(data => window.postMessage(data, \"*\"));\n      }\n      else if (evt.data.type === \"MEIOSIS_TRIGGER_STREAM_VALUE\") {\n        const streamId: string = evt.data.streamId;\n        const value: any = evt.data.value;\n\n        otherStreamsById[streamId](value);\n      }\n    });\n\n    lastStream.map(() => {\n      if (sendValues || liveChange) {\n        const values: Array<any> = params.dataStreams.map((stream: Stream<any>) =>\n          ({ value: toJS(stream()) }));\n\n        if (devtoolInitialized) {\n          window.postMessage({ type: \"MEIOSIS_VALUES\", values, update: true }, \"*\");\n        }\n        else {\n          bufferedValues.push(values);\n        }\n      }\n      liveChange = true;\n    });\n\n    // Send ping in case tracer was already loaded.\n    window.postMessage({ type: \"MEIOSIS_PING\" }, \"*\");\n  }\n};\n"],"sourceRoot":""}
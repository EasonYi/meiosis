{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 631f9daa8467f700402e","webpack:///./src/meiosis.ts","webpack:///./src/index.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;ACOa,sBAAc,GAAG,UAAC,aAA4B,IAAK,iBAAC,OAA2B;IAC1F,IAAM,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC;IACtC,OAAO,CAAC,OAAO,CAAC,WAAC,IAAI,QAAC,CAAC,GAAG,CAAC,MAAM,CAAC,EAAb,CAAa,CAAC,CAAC;IACpC,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,EAJ+D,CAI/D,CAAC;AAEW,kBAAU,GAAG,UAAC,GAAkB,IAAK,iBAAe,EAAiB,EAAE,GAAM,EAAE,CAAY;IACtG,IAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,WAAC;QAC1B,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACnB,MAAM,CAAC,GAAG,CAAC;IACb,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAER,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACd,MAAM,CAAC,GAAG,CAAC,CAAC;IACd,CAAC;IACD,MAAM,CAAC,MAAM,CAAC;AAChB,CAAC,EAViD,CAUjD,CAAC;;;;;;;;;;;;ACvFF,iCAA0B","file":"meiosis.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosis\"] = factory();\n\telse\n\t\troot[\"meiosis\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 631f9daa8467f700402e","export interface Mapper<A, B> {\n  (value: A): B;\n}\n\nexport interface Stream<T> {\n  /**\n   * Gets the current value of the stream.\n   */\n  (): T;\n\n  /**\n   * Sets a new value on the stream.\n   */\n  (value: T): Stream<T>;\n\n  /**\n   * Maps over a stream.\n   */\n  map<T, R>(mapper: Mapper<T, R>): Stream<R>;\n}\n\n/**\n * Top-level stream library declarations.\n */\nexport interface StreamLibrary {\n  /**\n   * Creates a stream.\n   */\n  stream<T>(): Stream<T>;\n\n  /**\n   * Creates a stream with an initial value.\n   */\n  stream<T>(value: T): Stream<T>;\n\n  /**\n   * Combines streams.\n   */\n  combine<T>(combinator: (...streams: Array<Stream<any>>) => T,\n    streams: Array<Stream<any>>): Stream<T>;\n}\n  /**\n   * Maps over a stream.\n   */\n  //map<T, R>(mapper: Mapper<T, R>, stream: Stream<T>): Stream<R>;\n\n  /**\n   * Merges two streams.\n   */\n  //merge<T>(stream1: Stream<T>, stream2: Stream<T>): Stream<T>;\n\n  /**\n   * Scans over a stream.\n   */\n  //scan<A, B>(scanner: Scanner<A, B>, initial: A, stream: Stream<B>): Stream<A>;\n\n  /**\n   * Similar to map, but for doing side effects and returns an empty stream.\n   */\n  //on<T, R>(mapper: Mapper<T, R>, stream: Stream<T>): Stream<R>;\n\nexport interface Scanner<A, B> {\n  (acc: A, next: B): A;\n}\n\nexport interface RunParameters<M> {\n  streams: Array<Stream<any>>;\n  streamLibrary: StreamLibrary;\n  copy?: any;//FIXME\n}\n\nexport const createMergeAll = (streamLibrary: StreamLibrary) => (streams: Array<Stream<any>>) => {\n  const merged = streamLibrary.stream();\n  streams.forEach(s => s.map(merged));\n  return merged;\n};\n\nexport const createScan = (lib: StreamLibrary) => function<A, B>(fn: Scanner<A, B>, acc: A, s: Stream<B>) {\n  const result = lib.combine(s => {\n    acc = fn(acc, s());\n    return acc;\n  }, [s]);\n\n  if (!result()) {\n    result(acc);\n  }\n  return result;\n};\n\n/*\nexport function trace<M>(params: RunParameters<M>): void {\n  if (!params.streams) {\n    throw new Error(\"Please specify streams.\");\n  }\n\n  const devtool: boolean = window && window[\"__MEIOSIS_TRACER_GLOBAL_HOOK__\"];\n  if (devtool) {\n    const copy: any = params.copy || ((model: M) => JSON.parse(JSON.stringify(model)));\n    const bufferedValues: Array<any> = [];\n    let devtoolInitialized: boolean = false;\n    const sendValues: Stream<boolean> = params.streamLibrary.stream(true);\n\n    let changes: Stream<Date> = params.streamLibrary.stream(new Date());\n    let lastChange: Date = changes();\n    on(() => changes(new Date()), params.modelChanges);\n\n    window.addEventListener(\"message\", evt => {\n      if (evt.data.type === \"MEIOSIS_RENDER_MODEL\") {\n        sendValues(evt.data.sendValuesBack);\n        scannerStream(evt.data.model);\n      }\n      else if (evt.data.type === \"MEIOSIS_TRACER_INIT\") {\n        devtoolInitialized = true;\n        bufferedValues.forEach(values => window.postMessage({ type: \"MEIOSIS_VALUES\", values }, \"*\"));\n      }\n    });\n\n    on(() => {\n      const change: Date = changes();\n      const update: boolean = change !== lastChange;\n      lastChange = change;\n\n      const values: Array<NamedValue> = streams.map((namedStream: NamedStream) =>\n        ({ name: namedStream.name, value: copy(namedStream.stream()) }));\n\n      if (sendValues()) {\n        if (devtoolInitialized) {\n          window.postMessage({ type: \"MEIOSIS_VALUES\", values, update }, \"*\");\n        }\n        else {\n          bufferedValues.push(values);\n        }\n      }\n    }, lastStream);\n  }\n};\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/meiosis.ts","export * from \"./meiosis\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts"],"sourceRoot":""}
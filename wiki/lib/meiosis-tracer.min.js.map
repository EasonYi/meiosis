{"version":3,"sources":["webpack://meiosisTracer/webpack/universalModuleDefinition","webpack://meiosisTracer/webpack/bootstrap","webpack://meiosisTracer/./src/receive.js","webpack://meiosisTracer/./src/view.js","webpack://meiosisTracer/./src/model.js","webpack://meiosisTracer/./src/meiosis-tracer.js","webpack://meiosisTracer/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","createReceiveValues","tracerModel","view","values","update","tracerStates","length","tracerIndex","push","errorMessage","divStyle","tracerView","tracer","document","getElementById","setAttribute","String","innerHTML","JSON","stringify","querySelectorAll","streamValueDivsMarkup","t","streamTextareas","reset","snapshot","updateStreamValue","streamId","streamState","container","textarea","getElementsByTagName","input","div","index","initialView","selector","renderModel","horizontal","target","querySelector","viewHtml","tracerContainer","addEventListener","evt","parseInt","model","onSliderChange","parse","style","display","err","onModelChange","button","onToggle","onReset","initStreamIds","streamIds","streamModel","triggerStreamValue","forEach","onStreamSliderChange","onStreamValueChange","streams","_model","_view","_receive","meiosisTracer","_ref","receiveValues","sendValuesBack","postMessage","type","initStreamIdModel","receiveStreamValue","data","_meiosisTracer"],"mappings":"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","file":"meiosis-tracer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"meiosisTracer\"] = factory();\n\telse\n\t\troot[\"meiosisTracer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const createReceiveValues = (tracerModel, view) => (values, update) => {\n  if (update) {\n    if (tracerModel.tracerStates.length > 0) {\n      tracerModel.tracerStates.length = tracerModel.tracerIndex + 1;\n    }\n    tracerModel.tracerStates.push(values);\n    tracerModel.tracerIndex = tracerModel.tracerStates.length - 1;\n  }\n  view(values, tracerModel);\n};\n\nexport { createReceiveValues };\n","const tracerContainerId = \"tracerContainer\";\nconst dataStreamContainerId = \"dataStreamContainer\";\nconst otherStreamContainerId = \"otherStreamContainer\";\nconst tracerId = \"tracerSlider\";\nconst tracerToggleId = \"tracerToggle\";\nconst tracerResetId = \"tracerReset\";\nconst tracerIndexId = \"tracerIndex\";\nconst tracerModelId = \"tracerModel\";\nconst errorMessageId = \"errorMessage\";\nlet errorMessage = null;\nlet divStyle = null;\n\nconst tracerView = (values, tracerModel) => {\n  const tracer = document.getElementById(tracerId);\n  tracer.setAttribute(\"max\", String(tracerModel.tracerStates.length - 1));\n  tracer.value = String(tracerModel.tracerIndex);\n\n  const tracerIndex = document.getElementById(tracerIndexId);\n  tracerIndex.innerHTML = String(tracerModel.tracerIndex);\n\n  const tracerModelEl = document.getElementById(tracerModelId);\n  tracerModelEl.value = JSON.stringify(values[0].value, null, 4);\n\n  var streamValueDivs = document.querySelectorAll(\"div.dataStream\");\n\n  if (streamValueDivs.length === 0) {\n    var streamValueDivsMarkup = \"\";\n\n    for (var i = 1, t = values.length; i < t; i++) {\n      streamValueDivsMarkup +=\n        \"<div\" + divStyle + \" class='dataStream'>\" +\n          \"<textarea rows='5' cols='40'></textarea>\" +\n        \"</div>\";\n    }\n    document.getElementById(dataStreamContainerId).innerHTML = streamValueDivsMarkup;\n  }\n\n  var streamTextareas = document.querySelectorAll(\"div.dataStream textarea\");\n\n  for (i = 1, t = values.length; i < t; i++) {\n    streamTextareas[i - 1].value = JSON.stringify(values[i].value, null, 4);\n  }\n};\n\nconst onSliderChange = (renderModel, tracerModel) => evt => {\n  const index = parseInt(evt.target.value, 10);\n  const snapshot = tracerModel.tracerStates[index];\n  tracerModel.tracerIndex = index;\n  const model = snapshot[0].value;\n  renderModel(model, false);\n  tracerView(snapshot, tracerModel);\n};\n\nconst onStreamSliderChange = (streamModel, streamId) => evt => {\n  const streamState = streamModel[streamId];\n  const index = parseInt(evt.target.value, 10);\n\n  streamState.index = index;\n\n  updateStreamValue(streamId, streamState);\n};\n\nconst onStreamValueChange = (streamId, textarea, triggerStreamValue) => () => {\n  try {\n    const value = JSON.parse(textarea.value);\n    triggerStreamValue(streamId, value);\n    errorMessage.style.display = \"none\";\n  }\n  catch (err) {\n    errorMessage.style.display = \"block\";\n  }\n};\n\nconst onModelChange = renderModel => evt => {\n  try {\n    const model = JSON.parse(evt.target.value);\n    renderModel(model, true);\n    errorMessage.style.display = \"none\";\n  }\n  catch (err) {\n    errorMessage.style.display = \"block\";\n  }\n};\n\nconst onToggle = tracerContainer => evt => {\n  const button = evt.target;\n\n  if (tracerContainer.style.display === \"none\") {\n    tracerContainer.style.display = \"block\";\n    button.innerHTML = \"Hide\";\n  }\n  else {\n    tracerContainer.style.display = \"none\";\n    button.innerHTML = \"Show\";\n  }\n};\n\nconst onReset = tracerModel => () => {\n  reset(tracerModel);\n};\n\nconst reset = (tracerModel) => {\n  const snapshot = tracerModel.tracerStates[0];\n  tracerModel.tracerStates.length = 0;\n  tracerModel.tracerIndex = 0;\n  tracerView(snapshot, tracerModel);\n};\n\nconst initialView = (selector, tracerModel, renderModel, horizontal) => {\n  const target = document.querySelector(selector);\n\n  if (target) {\n    divStyle = horizontal ? \" style='float: left'\" : \"\";\n\n    const viewHtml =\n      \"<div style='text-align: right'><button id='\" + tracerToggleId + \"'>Hide</button></div>\" +\n      \"<div id='\" + tracerContainerId + \"'>\" +\n        \"<div style='text-align: right'><button id='\" + tracerResetId + \"'>Reset</button></div>\" +\n        \"<div>Data streams:</div>\" +\n        \"<input id='\" + tracerId + \"' type='range' min='0' max='\" +\n          String(tracerModel.tracerStates.length - 1) +\n          \"' value='\" + String(tracerModel.tracerIndex) + \"' style='width: 100%'/>\" +\n        \"<div id='\" + tracerIndexId + \"'>\" + String(tracerModel.tracerIndex) + \"</div>\" +\n        \"<div\" + divStyle + \">\" +\n          \"<div>Model: (you can type into this box)</div>\" +\n          \"<textarea id='\" + tracerModelId + \"' rows='5' cols='40'></textarea>\" +\n          \"<div id='\" + errorMessageId + \"' style='display: none'><span style='color:red'>Invalid JSON</span></div>\" +\n        \"</div>\" +\n        \"<span id='\" + dataStreamContainerId + \"'></span>\" +\n        \"<span id='\" + otherStreamContainerId + \"'></span>\" +\n      \"</div>\";\n\n    target.innerHTML = viewHtml;\n\n    const tracerContainer = document.getElementById(tracerContainerId);\n    errorMessage = document.getElementById(errorMessageId);\n\n    document.getElementById(tracerId).addEventListener(\"input\", onSliderChange(renderModel, tracerModel));\n    document.getElementById(tracerModelId).addEventListener(\"keyup\", onModelChange(renderModel));\n    document.getElementById(tracerToggleId).addEventListener(\"click\", onToggle(tracerContainer));\n    document.getElementById(tracerResetId).addEventListener(\"click\", onReset(tracerModel));\n  }\n};\n\nconst initStreamIds = (streamIds, streamModel, triggerStreamValue) => {\n  var streamValueDivsMarkup = \"<div>Other streams:</div>\";\n\n  streamIds.forEach(streamId =>\n    streamValueDivsMarkup +=\n      \"<div\" + divStyle + \" class='otherStream' id='\" + streamId + \"'>\" +\n        \"<input type='range' min='0' max='0' value='0' style='width: 100%'/>\" +\n        \"<div>0</div>\" +\n        \"<textarea rows='5' cols='40'></textarea>\" +\n        \"<div><button>Trigger</button></div>\" +\n      \"</div>\"\n  );\n  document.getElementById(otherStreamContainerId).innerHTML = streamValueDivsMarkup;\n\n  streamIds.forEach(streamId => {\n    const container = document.getElementById(streamId);\n\n    const input = container.getElementsByTagName(\"input\")[0];\n    input.addEventListener(\"input\", onStreamSliderChange(streamModel, streamId));\n\n    const button = container.getElementsByTagName(\"button\")[0];\n    const textarea = container.getElementsByTagName(\"textarea\")[0];\n    button.addEventListener(\"click\", onStreamValueChange(streamId, textarea, triggerStreamValue));\n  });\n};\n\nconst updateStreamValue = (streamId, streamState) => {\n  const container = document.getElementById(streamId);\n  const textarea = container.getElementsByTagName(\"textarea\")[0];\n  const input = container.getElementsByTagName(\"input\")[0];\n  const div = container.getElementsByTagName(\"div\")[0];\n\n  textarea.value = JSON.stringify(streamState.values[streamState.index], null, 4);\n  input.setAttribute(\"max\", String(streamState.values.length - 1));\n  input.value = String(streamState.index);\n  div.innerHTML = String(streamState.index);\n};\n\nexport { initialView, tracerView, reset, initStreamIds, updateStreamValue };\n","const tracerModel = {\n  tracerStates: [],\n  tracerIndex: 0,\n  streams: { } // id: { index: N, values: [] }\n};\n\nexport { tracerModel };\n","import { tracerModel } from \"./model\";\nimport { initialView, tracerView, initStreamIds, updateStreamValue, reset } from \"./view\";\nimport { createReceiveValues } from \"./receive\";\n\nwindow[\"__MEIOSIS_TRACER_GLOBAL_HOOK__\"] = true;\n\nconst meiosisTracer = ({ selector, renderModel, triggerStreamValue, horizontal }) => {\n  const target = document.querySelector(selector);\n\n  if (!target) {\n    return;\n  }\n\n  const receiveValues = createReceiveValues(tracerModel, tracerView);\n\n  renderModel = renderModel || ((model, sendValuesBack) =>\n    window.postMessage({ type: \"MEIOSIS_RENDER_MODEL\", model, sendValuesBack }, \"*\"));\n\n  initialView(selector, tracerModel, renderModel, horizontal);\n\n  triggerStreamValue = triggerStreamValue || ((streamId, value) =>\n    window.postMessage({ type: \"MEIOSIS_TRIGGER_STREAM_VALUE\", streamId, value }, \"*\"));\n\n  const initStreamIdModel = (streamIds) => {\n    streamIds.forEach(streamId =>\n      tracerModel.streams[streamId] = { index: 0, values: [] }\n    );\n    initStreamIds(streamIds, tracerModel.streams, triggerStreamValue);\n  };\n\n  const receiveStreamValue = (streamId, value) => {\n    const streamState = tracerModel.streams[streamId];\n\n    streamState.values.push(value);\n    streamState.index = streamState.values.length - 1;\n\n    updateStreamValue(streamId, streamState);\n  };\n\n  window.addEventListener(\"message\", evt => {\n    if (evt.data.type === \"MEIOSIS_VALUES\") {\n      receiveValues(evt.data.values, evt.data.update);\n    }\n    else if (evt.data.type === \"MEIOSIS_STREAM_IDS\") {\n      const streamIds = evt.data.streamIds;\n      initStreamIdModel(streamIds);\n    }\n    else if (evt.data.type === \"MEIOSIS_STREAM_VALUE\") {\n      receiveStreamValue(evt.data.streamId, evt.data.value);\n    }\n  });\n\n  window.postMessage({ type: \"MEIOSIS_TRACER_INIT\" }, \"*\");\n\n  return {\n    receiveValues,\n    initStreamIdModel,\n    receiveStreamValue,\n    reset: () => reset(tracerModel)\n  };\n};\n\nexport { meiosisTracer };\n","import { meiosisTracer } from \"./meiosis-tracer\";\n\n/*\n1. Live change\n- receive values from meiosis with update=true. This will add to the tracer's history\n  and increase the slider max.\n- re-render the tracer view with update=true.\n\n2. Time-travel change\n- send MEIOSIS_RENDER_MODEL with sendValuesBack=false\n- we already have the values in the snapshot, so don't need anything back\n- re-render the tracer view with update=false.\n\n3. Typing in model textarea\n- send MEIOSIS_RENDER_MODEL with sendValuesBack=true. The tracer needs to get\n  the computed values from the other streams.\n- receive values from meiosis with update=false so this will not add to the tracer's history.\n- re-render the tracer view with update=false.\n*/\n\nmodule.exports = meiosisTracer;\n"],"sourceRoot":""}